import {
   BelongsTo,
   Column,
   DataType,
   Default,
   ForeignKey,
   HasMany,
   Model,
   Table,
} from "sequelize-typescript";
import { Users } from "./users.model";
import { Columns } from "./columns.model";
import { Comments } from "./comments.model";

interface CardCreationAttrs {
   cardName: string;
   cardDescription: string;
   columnId: number;
   userId: number;
}

@Table({ tableName: "CARDS" })
export class Cards extends Model<Cards, CardCreationAttrs> {
   @Column({ type: DataType.INTEGER, autoIncrement: true, primaryKey: true })
   id: number;

   @Column({ type: DataType.STRING, allowNull: false })
   cardName: string;

   @Column({ type: DataType.STRING })
   cardDescription: string;

   @Default(false)
   @Column({ type: DataType.BOOLEAN, allowNull: false })
   isCompleted: boolean;

   // ссылаемся на конкретную колонку
   @ForeignKey(() => Columns)
   @Column({ type: DataType.INTEGER, allowNull: false })
   columnId: number;

   @BelongsTo(() => Columns)
   column: Columns;

   // ссылаемся на пользователя автора
   @ForeignKey(() => Users)
   @Column({ type: DataType.INTEGER, allowNull: false })
   userId: number;

   @BelongsTo(() => Users)
   author: Users;

   @HasMany(() => Comments)
   comments: Comments[];
}

// CREATE TABLE "card" (
// 	"id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
// 	"card_name" varchar NOT NULL,
// 	"card_description" varchar NOT NULL,
// 	"is_completed" bool NOT NULL DEFAULT false,
// 	"column_id" integer NOT NULL,
// 	"created_at" timestamp,
// 	"updated_at" timestamp
//   );
