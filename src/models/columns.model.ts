import {
   BelongsTo,
   Column,
   DataType,
   ForeignKey,
   HasMany,
   Model,
   Table,
} from "sequelize-typescript";
import { Users } from "./users.model";
import { Cards } from "./cards.model";

interface ColumnCreationAttrs {
   columnName: string;
   userId: number;
}

@Table({ tableName: "COLUMNS" })
export class Columns extends Model<Columns, ColumnCreationAttrs> {
   @Column({ type: DataType.INTEGER, autoIncrement: true, primaryKey: true })
   id: number;

   @Column({ type: DataType.STRING, allowNull: false })
   columnName: string;

   @ForeignKey(() => Users)
   @Column({ type: DataType.INTEGER, allowNull: false })
   userId: number;

   @BelongsTo(() => Users)
   author: Users;

   @HasMany(() => Cards)
   cards: Cards[];
}
// CREATE TABLE "column" (
// 	"id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
// 	"column_name" varchar NOT NULL,
// 	"user_id" integer NOT NULL,
// 	"created_at" timestamp,
// 	"updated_at" timestamp
//   );
