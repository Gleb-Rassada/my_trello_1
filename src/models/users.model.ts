import { Column, DataType, HasMany, Model, Table } from "sequelize-typescript";
import { Columns } from "./columns.model";
import { Cards } from "./cards.model";
import { Comments } from "./comments.model";

interface UserCreationAttrs {
   userName: string;
   userEmail: string;
   userPassword: string;
}

@Table({ tableName: "USERS" })
export class Users extends Model<Users, UserCreationAttrs> {
   @Column({ type: DataType.INTEGER, autoIncrement: true, primaryKey: true })
   id: number;

   @Column({ type: DataType.STRING, allowNull: false })
   userName: string;

   @Column({ type: DataType.STRING, unique: true, allowNull: false })
   userEmail: string;

   @Column({ type: DataType.STRING, allowNull: false })
   userPassword: string;

   @HasMany(() => Columns)
   columns: Columns[];

   @HasMany(() => Cards)
   cards: Cards[];

   @HasMany(() => Comments)
   comments: Comments[];
}
// CREATE TABLE "user" (
//    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
//    "user_name" varchar NOT NULL,
//    "user_email" varchar UNIQUE NOT NULL,
//    "user_password" varchar NOT NULL,
//    "created_at" timestamp,
//    "updated_at" timestamp
//  );
